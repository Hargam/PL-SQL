
------------------- BOUCLES -------------
--- Exercice 1 - peupler une table avec 100 enregistrements
create table client (id number GENERATED BY DEFAULT AS IDENTITY primary key,
info varchar(50));
-- primary key => 1 non null et 2 UNIQUE
-- drop table client
------------- PEUPLER LA TABLE
-- on a besoin d'une varibale d'itération (variable de course)
set SERVEROUTPUT on;
set echo  off;
declare
  vCompteur int ; -- l'initialisation de la variable peut se faire 
                    -- à la définition ou dans le traitement
begin
    vCompteur := 0;
    LOOP
      vCompteur := vCompteur +1;
     -- insert into client  values (vCompteur, 'client_'||vCompteur);
        insert into client(info) values ('client_'||vcompteur);
            dbms_output.put_line ('le  client n°'||vcompteur||' est ajouté !');

      IF vCompteur = 100 THEN
          exit;
      END IF;
    END LOOP;
    dbms_output.put_line ('100 clients insérés');
end;
delete from client;
---
set serveroutput on;
begin 
   dbms_output.put_line ('hello');
end;

---
select * from client;

----------------------------------------------------------------
----------------------- LOOP avec BOUCLE FOR
delete from client;
declare 
 vCompteur int;
 vValFinal int := 100;
begin
    FOR vCompteur IN 1 .. vValFinal 
    LOOP 
         insert  into client (info) values ('client_'||vCompteur);
         DBMS_OUTPUT.put_line('le client n°'||vCompteur||' est ajouté!');
    END LOOP;
    dbms_output.put_line('fin de traitement');

end;

drop table client;
create table client (id number GENERATED BY DEFAULT AS IDENTITY primary key,
info varchar(50));

-----------------------------------------------------------------------------
--------------- INSERER DU TEXT ALEATOIRE -------------------------------
--------------------------------------------------------------
declare 
   vInfo client.info%type;
begin
-- pas besoin de déclarer la variable compteur
    FOR vCompteur IN 1 .. 100 
    LOOP 
         vInfo := DBMS_RANDOM.STRING('U',15);
         
         insert  into client (info) values (vInfo);
         DBMS_OUTPUT.put_line('le client  '||vInfo||' est ajouté!');
    END LOOP;
    dbms_output.put_line('fin de traitement');

end;
drop table client;
create table client (id number GENERATED BY DEFAULT AS IDENTITY primary key,
info varchar(50));

----------------------------------
------------- MODIFIER LE SCRIP suivant POUR QUE LA LONGUEUR DE LA CHAINE INFO SOIT ALEATOIRE
declare 
   vInfo client.info%type;
   vLong number ;
begin
-- pas besoin de déclarer la variable compteur
    FOR vCompteur IN 1 .. 100 
    LOOP  
         vLong := dbms_random.value(1,50);
         vInfo := DBMS_RANDOM.STRING('U',vLong);
         
         insert  into client (info) values (vInfo);
         DBMS_OUTPUT.put_line('le client  '||vInfo||' est ajouté!');
    END LOOP;
    dbms_output.put_line('fin de traitement');
end;
-----------------------------------------------------------------
-----------------------------------------------------------------
------------- MODIFIER LE SCRIP
-- valeur compteur pair en minuscule, impaire en maj
declare 
   vInfo client.info%type; -- permet d'avoir le même type que la colonne Info de CLIENT
   vLong number ;
begin
-- pas besoin de déclarer la variable compteur
    FOR vCompteur IN 1 .. 100 
    LOOP  
         vLong := dbms_random.value(1,50);
         if vCompteur mod 2 = 0 then
         vInfo := DBMS_RANDOM.STRING('l',vLong);
         ELSE
         vInfo := DBMS_RANDOM.STRING('u',vLong);
         end if;
         
         insert  into client (info) values (vInfo);
         DBMS_OUTPUT.put_line('le client  '||vInfo||' est ajouté!');
    END LOOP;
    dbms_output.put_line('fin de traitement');
end;

------------------------------------------------------------
--------------------- BOUCLE WHILE ---------------------------
-------------------------------------------------------
--- somme des nombres pairs et imparies de 1 à 100
set serveroutput on;

declare
  vCompteur int := 1;
  vSommePaire int := 0;
  vSommeImpaire int := 0;
begin
   DBMS_OUTPUT.PUT_line('début de traitement ... ');
  while vCompteur <= 100
  LOOP
    if vCompteur mod 2 = 0 then
    --- mod == modulo : reste de la division
      vSommePaire := vSommePaire + vCompteur;
    else
    vSommeImpaire := vSommeImpaire + vCompteur;
    end if;
  vCompteur := vCompteur +1;
  end loop;
    DBMS_OUTPUT.PUT_line('la somme des nombres paires est : '||vSommePaire);
     DBMS_OUTPUT.PUT_line(' la somme des nombres impaires :'||vSommeImpaire);

end;
